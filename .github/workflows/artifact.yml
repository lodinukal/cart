name: Release

on:
  push:

permissions:
  contents: write

jobs:
  prep:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: mlugg/setup-zig@v1
        with:
          version: 0.14.0-dev.2540+f857bf72e

      - name: Get Version
        id: version
        run: |
          version=$(zig build version)
          echo "version=$version">> $GITHUB_OUTPUT

  build:
    needs: prep
    strategy:
      matrix:
        include:
          - name: shared linux x86_64
            target: x86_64-linux-gnu
            artifact: cart-${{ needs.prep.outputs.version }}-shared-linux-x86_64
            shared: true
            extra-files: ../lib/libluau.*
          - name: linux x86_64
            target: x86_64-linux-gnu
            artifact: cart-${{ needs.prep.outputs.version }}-linux-x86_64
            shared: false
          # - name: shared linux arm64
          #   target: aarch64-linux-gnu
          #   artifact: cart-${{ needs.prep.outputs.version }}-shared-linux-aarch64
          #   shared: true
          #   extra-files: ./luau.so
          # - name: linux arm64
          #   target: aarch64-linux-gnu
          #   artifact: cart-${{ needs.prep.outputs.version }}-linux-aarch64
          #   shared: false
          # - name: linux RISCV64
          #   target: riscv64-linux
          #   artifact: cart-${{ needs.prep.outputs.version }}-linux-riscv64
          #   shared: false
          - name: shared windows x86_64
            target: x86_64-windows
            artifact: cart-${{ needs.prep.outputs.version }}-shared-windows-x86_64
            ext: .exe
            shared: true
            extra-files: ./luau.dll
          - name: windows x86_64
            target: x86_64-windows
            artifact: cart-${{ needs.prep.outputs.version }}-windows-x86_64
            ext: .exe
            shared: false
          # - name: shared windows arm64
          #   target: aarch64-windows
          #   artifact: cart-${{ needs.prep.outputs.version }}-shared-windows-aarch64
          #   ext: .exe
          #   shared: true
          #   extra-files: ./luau.dll
          # - name: windows arm64
          #   target: aarch64-windows
          #   artifact: cart-${{ needs.prep.outputs.version }}-windows-aarch64
          #   ext: .exe
          #   shared: false
          - name: shared macos arm64
            target: aarch64-macos
            artifact: cart-${{ needs.prep.outputs.version }}-shared-macos-aarch64
            shared: true
            extra-files: ../lib/libluau.*
          - name: macos arm64
            target: aarch64-macos
            artifact: cart-${{ needs.prep.outputs.version }}-macos-aarch64
            shared: false
          - name: wasm
            target: wasm32-wasi
            artifact: cart-${{ needs.prep.outputs.version }}-wasm
            ext: .wasm
            shared: false

    name: ${{ matrix.name }}
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: mlugg/setup-zig@v1
        with:
          version: 0.14.0-dev.2571+01081cc8e

      - name: Build
        run: zig build -Dshared=${{ matrix.shared }} -Doptimize=ReleaseFast -Dtarget=${{ matrix.target }}

      - name: Pack Artifact
        run: cd ./zig-out/bin && zip -r ../../${{ matrix.artifact }}.zip ./cart${{ matrix.ext }} ${{ matrix.extra-files }} ../../types

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}.zip

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [prep, build]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # draft: true
          files: ./artifacts/*.zip
          name: ${{ needs.prep.outputs.version }}
          tag_name: v${{ needs.prep.outputs.version }}
          fail_on_unmatched_files: true
